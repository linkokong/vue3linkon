import{_ as t}from"./ExpansionPanel.vue_vue_type_style_index_0_lang-DryMMxSS.js";import{M as n}from"./MarkdownPreview-DtP-at91.js";import{d as o,o as e,a as r,w as a,l as p,u as _}from"./index-DygiovCP.js";import"./monokai-sublime-CD9-rurh.js";import"./_commonjsHelpers-CqkleIqs.js";const c="### 原型对象  `prototype`\n- 就是一个普通对象，对应一块内存空间\n- 每一个函数都会有一个 `prototype`（除了箭头函数）\n- 每一个函数都可以通过一个  `new` 一个构造函数来创建一个实例 （inst）\n```javascript\nfunction a(){}\na.prototype // {}\n```\n\n### 隐式原型 `__proto__`\n```javascript\nfunction a(){}\na.prototype // {}\n\nvar b= new a()\na.prototype === b.__proto__  //true\n```\n\n### js内 所有的对象都可以认为是 `new` 一个函数来创建的。函数也是一个对象\n```javascript\nvar a= new Function('a','b','return a+b')\nvar b=new Object()\nvar c= {}\n\nObject.prototype === c.__proto__  //true\nObject.prototype === Function.prototype.__proto__ //true\nFunction.__proto__=== Function.prototype //true\n```\n### 原型链：一个对象，从他的原型开始找，再找隐式原型，直到找到null为止。\n- Object的原型的隐式原型 是 null\n```javascript\nObject.prototype.__proto__  // null\n```\n",f=o({__name:"PrototypeChain",setup(i){return(s,u)=>(e(),r(t,{title:"原型，原型链，隐式原型"},{"text-content":a(()=>[p(n,{text:_(c),lang:"markdown"},null,8,["text"])]),_:1}))}});export{f as default};
